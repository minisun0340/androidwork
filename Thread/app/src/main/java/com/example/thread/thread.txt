안드로이드 쓰레드
    - 안드로이드 os는 액티비티를 만들고 코드를 처리하기 위해서 쓰레드를 생성하고 실행한다. 이를 메인쓰레드(UI쓰레드)라 한다.
    - UI쓰레드는 아무 작업을 하고 있지 않아야 즉, 유휴 상태여야 화면에 대한 작업이 가능하다.
    - UI쓰레드는 이벤트에 대한 처리를 해야 하므로 유휴상태로 유지해야 한다.
    - 개발자가 발생시킨 쓰레드에서는 화면처리를 할 수 없다. UI쓰레드에서만 화면 처리를 할 수 있다.
    - 화면에 출력된 상태에서 5초이상 반응하지 못하면 시스템에서 액티비티를 강제로 종료시킨다.
                                                                      --------
                                                                      전화통화, 문자 등 스마트포의 주된 기능을 방해받지 않고
                                                                      실행할 수 있어야 하므로
    - 비동기처리, 오래 걸리는 작업, 네트워크 연동은 쓰레드로 처리한다.

안드로이드에서 쓰레드 실행하기
1. Handler 객체를 이용해서 작업
    - 개발자가(개발자가 만든 쓰레드 내부에서) 안드로이드 os에게 작업 수행을 요청
    - 개발자가 작성한 workerThread에서 작업을 요청하면 안드로이드 os는 현재 작업을 하고 있지 않을 때 worker쓰레드에서 요청한 작업을 처리한다.
        이 처리는 UI쓰레드에서 진행되므로 화면을 변경할 수 있다.

    1) worker thread
      - 핸들러객체의 sendMessage메소드를 이용해서 핸들러에게 작업을 의뢰
        : 핸들러한테 보낼 메시지가 있는 경우 Message객체를 새로 생성해서 보내거나 기존의 Message객체를 핸들러에게 넘긴다.


    2) UI쓰레드
      - 핸들러객체를 정의해서 작업 쓰레드에서 받은 요청을 처리하도록 구현
      - 핸들러의 handleMessage메소드를 오버라이딩해서 작업

    3) 작업순서
      ⓐ핸들러 객체 변수 정의하기
      ⓑ핸들러 객체를 구현하고 handleMessage메소드를 오버라이딩해서 사용자의 요청을 처리하도록 구현하기
      ⓒ쓰레드 객체내부에서 화면을 변경하는 작업에 대한 처리를 핸들러의 sendMessage메소드를 호출하며 핸들러에게 요청한다.


      오래 걸리는 작업은 쓰레드가 처리하고 화면을 바꾸는 것만 핸들러에게 의뢰. UI에서 화면을 바꿔야 하니까.

2. 핸들러객체의 post메소드 호출하는 방법
    1) handleMessage에서 처리할 화면 작업을 변도의 쓰레드로 생성
    2) 오래 걸리는 작업이나 네트워크 관련된 작업을 처리하며 화면을 변경할 일이 생기면 핸들러객체의 post메소드를 호출하며
        1번에서 만들어 놓은 쓰레드 객체를 전달한다.
    3) 핸들러 객체는 전달 받은 쓰레드객체를 실행한다. - 내부에서 처리되는 작업

3. runOnUiThread
    => 개발자가 발생시킨 일반쓰레드에서 코드 일부를 메인 쓰레드가 처리하도록 하는 기능
        핸들러 대신 사용할 수 있다.
        
